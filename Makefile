# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  glad_config = debug
  GLFW_config = debug
  core_config = debug
  core_test_config = debug

else ifeq ($(config),release)
  glad_config = release
  GLFW_config = release
  core_config = release
  core_test_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := glad GLFW core core_test

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

glad:
ifneq (,$(glad_config))
	@echo "==== Building glad ($(glad_config)) ===="
	@${MAKE} --no-print-directory -C ext/glad -f Makefile config=$(glad_config)
endif

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C ext/GLFW -f Makefile config=$(GLFW_config)
endif

core:
ifneq (,$(core_config))
	@echo "==== Building core ($(core_config)) ===="
	@${MAKE} --no-print-directory -C src/core -f core.make config=$(core_config)
endif

core_test: core glad GLFW
ifneq (,$(core_test_config))
	@echo "==== Building core_test ($(core_test_config)) ===="
	@${MAKE} --no-print-directory -C src/core -f core_test.make config=$(core_test_config)
endif

clean:
	@${MAKE} --no-print-directory -C ext/glad -f Makefile clean
	@${MAKE} --no-print-directory -C ext/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C src/core -f core.make clean
	@${MAKE} --no-print-directory -C src/core -f core_test.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   glad"
	@echo "   GLFW"
	@echo "   core"
	@echo "   core_test"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"